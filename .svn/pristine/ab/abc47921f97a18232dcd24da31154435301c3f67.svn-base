using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NPOI.SS.UserModel;
using NPOI.XSSF.UserModel;
using NPOI.HSSF.UserModel;
using NPOI.SS.Util;

namespace ExcelHelper
{
    /// <summary>
    /// MyCell
    /// </summary>
    public class MyCell : ICell
    {
        public CellRangeAddress ArrayFormulaRange
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public bool BooleanCellValue
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public CellType CachedFormulaResultType
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public IComment CellComment
        {
            get
            {
                throw new NotImplementedException();
            }

            set
            {
                throw new NotImplementedException();
            }
        }

        public string CellFormula
        {
            get
            {
                throw new NotImplementedException();
            }

            set
            {
                throw new NotImplementedException();
            }
        }

        public ICellStyle CellStyle
        {
            get
            {
                throw new NotImplementedException();
            }

            set
            {
                throw new NotImplementedException();
            }
        }

        public CellType CellType
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public int ColumnIndex
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public DateTime DateCellValue
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public byte ErrorCellValue
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public IHyperlink Hyperlink
        {
            get
            {
                throw new NotImplementedException();
            }

            set
            {
                throw new NotImplementedException();
            }
        }

        public bool IsMergedCell
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public bool IsPartOfArrayFormulaGroup
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public double NumericCellValue
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public IRichTextString RichStringCellValue
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public IRow Row
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public int RowIndex
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public ISheet Sheet
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public string StringCellValue
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public ICell CopyCellTo(int targetIndex)
        {
            throw new NotImplementedException();
        }

        public void RemoveCellComment()
        {
            throw new NotImplementedException();
        }

        public void RemoveHyperlink()
        {
            throw new NotImplementedException();
        }

        public void SetAsActiveCell()
        {
            throw new NotImplementedException();
        }

        public void SetCellErrorValue(byte value)
        {
            throw new NotImplementedException();
        }

        public void SetCellFormula(string formula)
        {
            throw new NotImplementedException();
        }

        public void SetCellType(CellType cellType)
        {
            throw new NotImplementedException();
        }

        public void SetCellValue(string value)
        {
            throw new NotImplementedException();
        }

        public void SetCellValue(bool value)
        {
            throw new NotImplementedException();
        }

        public void SetCellValue(IRichTextString value)
        {
            throw new NotImplementedException();
        }

        public void SetCellValue(DateTime value)
        {
            throw new NotImplementedException();
        }

        public void SetCellValue(double value)
        {
            throw new NotImplementedException();
        }
    }
}
